local AkaliNotif = loadstring(game:HttpGet("https://raw.githubusercontent.com/Kinlei/Dynissimo/main/Scripts/AkaliNotif.lua"))();



local Notify = AkaliNotif.Notify;



Notify({



Description = "Welcome to krones lock";



Title = "krone#9105 and sleepin#5186";



Duration = 10;



});



local TimeToLoad = tick()



local CC = game:GetService"Workspace".CurrentCamera



local Plr



local enabled = falseWD



local Prediction = true



local pred = 0.137130	
local mouse = game.Players.LocalPlayer:GetMouse()



local placemarker = Instance.new("Part", game.Workspace)



local pred2 = 0.146











local pingvalue = nil;



local split = nil;



local ping = nil;











local AnchorCount = 0



local MaxAnchor = 50











function msg(tx)	



    game:GetService("StarterGui"):SetCore("SendNotification", {	



        Title = "krones lock",	



        Text = tx,	



Duration = 5	



    })	



end	











--// Check if aimlock is loaded	



	



if loaded == true then	



        msg("Already Executed")



    return	



end























































if fpc == true then



msg("FPS SCREEN GUI Successful")



repeat wait() until game:IsLoaded() wait(2)



local ScreenGui = Instance.new("ScreenGui")



local Fps = Instance.new("TextLabel")



local Ping = Instance.new("TextLabel")







--Properties:







ScreenGui.Parent = game.CoreGui



ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling







Fps.Name = "Fps"



Fps.Parent = ScreenGui



Fps.BackgroundColor3 = Color3.fromRGB(255, 255, 255)



Fps.BackgroundTransparency = 0.7



Fps.Position = UDim2.new(0.786138654, 0, 0, 0)



Fps.Size = UDim2.new(0, 125, 0, 25)



Fps.Font = Enum.Font.SourceSans



Fps.TextColor3 = Color3.fromRGB(0, 0, 0)



Fps.TextScaled = true



Fps.TextSize = 14.000



Fps.TextWrapped = true







Ping.Name = "Ping"



Ping.Parent = ScreenGui



Ping.BackgroundColor3 = Color3.fromRGB(255, 255, 255)



Ping.BackgroundTransparency = 0.7



Ping.BorderColor3 = Color3.fromRGB(255, 255, 255)



Ping.Position = UDim2.new(0.700000048, 0, 0, 0)



Ping.Size = UDim2.new(0, 125, 0, 25)



Ping.Font = Enum.Font.SourceSans



Ping.TextColor3 = Color3.fromRGB(0, 0, 0)



Ping.TextScaled = true



Ping.TextSize = 14.000



Ping.TextWrapped = true







-- Scripts:







local script = Instance.new('LocalScript', Fps)



local RunService = game:GetService("RunService")



RunService.RenderStepped:Connect(function(frame) -- This will fire every time a frame is rendered



script.Parent.Text = ("FPS: "..math.round(1/frame)) 



end)



























local script = Instance.new('LocalScript', Ping)



local RunService = game:GetService("RunService")



RunService.RenderStepped:Connect(function(ping) 



script.Parent.Text = ("Ping: " ..game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString(math.round(2/ping))) -- your ping



end)



end



























if autoreload == true then



msg("Auto Reload Successful")



coroutine.wrap(function()



while wait(.6) and game:GetService("RunService").Heartbeat:Wait() do



if game:GetService("Players").LocalPlayer.Character:FindFirstChildWhichIsA("Tool") then



            if game:GetService("Players").LocalPlayer.Character:FindFirstChildWhichIsA("Tool").Script:FindFirstChild("Ammo") then



                if game:GetService("Players").LocalPlayer.Character:FindFirstChildWhichIsA("Tool").Script:FindFirstChild("Ammo").Value == 0 then



                    game:GetService("ReplicatedStorage").MainEvent:FireServer("Reload", game:GetService("Players").LocalPlayer.Character:FindFirstChildWhichIsA("Tool")) 



                end



            end



        end



end



end)()



end























if plastic == true then



msg("Plastic Successful")



for _,v in pairs(workspace:GetDescendants()) do



if v.ClassName == "Part"



or v.ClassName == "SpawnLocation"



or v.ClassName == "WedgePart"



or v.ClassName == "Terrain"



or v.ClassName == "MeshPart" then



v.Material = "Plastic"



end



end



end































if time1 == true then



msg("Time Successful")



game.Lighting.ClockTime = time2



end































if fpsunlocker == true then



msg("Unlocked FPS Successfully")



    if setfpscap then



        setfpscap(fps)



end



end



































if rainbowchar == true then



msg("Rainbow Avatar Successful")



for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do



    if v:IsA("MeshPart") then



        v.Material = "ForceField"



        spawn(function()



            while wait() do



                for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do



                    if v:IsA("MeshPart") then



                        v.Color = Color3.fromHSV(tick()%5/5,1,1)



                        wait()



                    end



                end 



            end



        end)



    end



end



end















































if mobile == true then



msg("Tool Successful")



getgenv().keytoclick2 = key



tool = Instance.new("Tool")



tool.RequiresHandle = false



tool.Name = keytoclick2



tool.Activated:connect(function()



    local vim = game:service("VirtualInputManager")



vim:SendKeyEvent(true, keytoclick2, false, game)



end)



tool.Parent = game.Players.LocalPlayer.Backpack











coroutine.wrap(function()



while wait() do



    if game.Players.LocalPlayer.CharacterAdded then



game.Players.LocalPlayer.CharacterAdded:Wait()



wait(2)



getgenv().keytoclick2 = key



tool = Instance.new("Tool")



tool.RequiresHandle = false



tool.Name = keytoclick2



tool.Activated:connect(function()



    local vim = game:service("VirtualInputManager")



vim:SendKeyEvent(true, keytoclick2, false, game)



end)



tool.Parent = game.Players.LocalPlayer.Backpack



end



end



end)()



end































game:GetService"RunService".Stepped:connect(function()



	if enabled and Plr.Character ~= nil and Plr.Character:FindFirstChild("HumanoidRootPart") then



		placemarker.CFrame = CFrame.new(Plr.Character.HumanoidRootPart.Position+(Plr.Character.HumanoidRootPart.Velocity*pred))



	else



		placemarker.CFrame = CFrame.new(0, 9999, 0)



	end







end) -- // Add This



























if autopred == true then



function h()



        while true do task.wait()



local pingvalue = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()



        local split = string.split(pingvalue,'(')



        local ping = tonumber(split[1])



        if ping > 200 and ping < 300 then 



            local pred2  = 0.18742



            elseif ping > 180 and ping < 195 then 



            local pred2  = 0.16779123



          elseif ping > 140 and ping < 180 then 



            local pred2  = 0.16



            elseif ping < 130 then



			local pred2 = 0.151



          elseif ping > 125 then 



            local pred2  = 0.149



        elseif ping > 110 then 



            local pred2  = 0.146



        elseif ping < 105 then



            local pred2  = 0.138



        elseif ping < 100 then



            local pred2  = 0.137



        elseif ping < 90 then



            local pred2  = 0.136



        elseif ping < 80 then



            local pred2  = 0.134



        elseif ping < 70 then



            local pred2  = 0.131



        elseif ping < 60 then



            local pred2  = 0.1229



        elseif ping < 50 then



            local pred2  = 0.1225



        elseif ping < 40 then



            local pred2  = 0.1256



        end



    pred = pred



end



end







spawn(h)



end







    function makemarker(Parent, Adornee, Color, Size, Size2)



        local e = Instance.new("BillboardGui", Parent)



        e.Name = "PP"



        e.Adornee = Adornee



        e.Size = UDim2.new(Size, Size2, Size, Size2)



        e.AlwaysOnTop = true



        local a = Instance.new("Frame", e)



        a.Size = UDim2.new(1, 0, 1, 0)



        a.BackgroundTransparency = 0



        a.BackgroundColor3 = Color



        local g = Instance.new("UICorner", a)



        g.CornerRadius = UDim.new(50, 50)



        return(e)



    end







    



    local data = game.Players:GetPlayers()



    function noob(player)



        local character



        repeat wait() until player.Character



        local handler = makemarker(guimain, player.Character:WaitForChild("HumanoidRootPart"), Color3.fromRGB(107, 184, 255), 0.3, 3)



        handler.Name = player.Name



        player.CharacterAdded:connect(function(Char) handler.Adornee = Char:WaitForChild("HumanoidRootPart") end)







    end







    for i = 1, #data do



        if data[i] ~= game.Players.LocalPlayer then



            noob(data[i])



        end



    end







    game.Players.PlayerAdded:connect(function(Player)



        noob(Player)



    end)







    spawn(function()



        placemarker.Anchored = true



        placemarker.CanCollide = false



        placemarker.Size = Vector3.new(9, 9, 9)



        placemarker.Transparency = 0.75



        makemarker(placemarker, placemarker, Color3.fromRGB(0,0,0), 0.40, 0)



    end)    







mouse.KeyDown:Connect(function(k)



    if k == Key and enabled then return end



    if enabled then



        enabled = false



        guimain[Plr.Name].Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)



        			if notif == true then



        			Plr = getClosestPlayerToCursor()



                    msg("Unlocked")



		end



    else



        enabled = true 



        Plr = getClosestPlayerToCursor()



        guimain[Plr.Name].Frame.BackgroundColor3 = Color3.fromRGB(255, 0, 0)



                			if notif == true then



				Plr = getClosestPlayerToCursor()



				msg("locking"..tostring(Plr.Character.Humanoid.Name))



			end



end



end)







    function getClosestPlayerToCursor()



        local closestPlayer



        local shortestDistance = math.huge







        for i, v in pairs(game.Players:GetPlayers()) do



            if v ~= game.Players.LocalPlayer and v.Character and v.Character:FindFirstChild("Humanoid") and v.Character.Humanoid.Health ~= 0 and v.Character:FindFirstChild("HumanoidRootPart") then



                local pos = CC:WorldToViewportPoint(v.Character.PrimaryPart.Position)



                local magnitude = (Vector2.new(pos.X, pos.Y) - Vector2.new(mouse.X, mouse.Y)).magnitude



                if magnitude < shortestDistance then



                    closestPlayer = v



                    shortestDistance = magnitude



                end



            end



        end



        return closestPlayer



    end







    game:GetService"RunService".Stepped:connect(function()



        if enabled and Plr.Character and Plr.Character:FindFirstChild("HumanoidRootPart") then



            placemarker.CFrame = CFrame.new(Plr.Character.HumanoidRootPart.Position+(Plr.Character.HumanoidRootPart.Velocity*pred))



        else



            placemarker.CFrame = CFrame.new(0, 9999, 0)



        end



    end)







    local mt = getrawmetatable(game)



    local old = mt.__namecall



    setreadonly(mt, false)



    mt.__namecall = newcclosure(function(...)



        local args = {...}



        if enabled and getnamecallmethod() == "FireServer" and args[2] == "GetMousePos" then



            args[3] = Plr.Character.HumanoidRootPart.Position+(Plr.Character.HumanoidRootPart.Velocity*pred)



            



                        --[[



            if airshot == true then



                if game.Workspace.Players[Plr.Name].Humanoid:GetState() == Enum.HumanoidStateType.Freefall then -- Plr.Character:WaitForChild("Humanoid"):GetState() == Enum.HumanoidStateType.Freefall



                    



                    --// Airshot



                    args[3] = Plr.Character.LeftFoot.Position+(Plr.Character.LeftFoot.Velocity*pred2)







                else



                    args[3] = Plr.Character.HumanoidRootPart.Position+(Plr.Character.HumanoidRootPart.Velocity*pred2)







                end



            else



                    args[3] = Plr.Character.HumanoidRootPart.Position+(Plr.Character.HumanoidRootPart.Velocity*pred2)



            end



            ]]



		if Prediction == true then







			args[3] = Plr.Character[SelectedPart].Position+(Plr.Character[SelectedPart].Velocity*pred2)







		else







			args[3] = Plr.Character[SelectedPart].Position







		end



            return old(unpack(args))



        end



        return old(...)



    end)



    



    



game:GetService("RunService").RenderStepped:Connect(function()



	if resolver == true and Plr.Character ~= nil and enabled then



		if airshot == true and enabled and Plr.Character ~= nil then







			if game.Workspace.Players[Plr.Name].Humanoid:GetState() == Enum.HumanoidStateType.Freefall then -- Plr.Character:WaitForChild("Humanoid"):GetState() == Enum.HumanoidStateType.Freefall







				--// Airshot







				--// Anchor Check







				if Plr.Character ~= nil and Plr.Character.HumanoidRootPart.Anchored == true then



					AnchorCount = AnchorCount + 1



					if AnchorCount >= MaxAnchor then



						Prediction = false



						wait(2)



						AnchorCount = 0;



					end



				else



					Prediction = true



					AnchorCount = 0;



				end







				SelectedPart = "LeftFoot"







			else



				--// Anchor Check







				if Plr.Character ~= nil and Plr.Character.HumanoidRootPart.Anchored == true then



					AnchorCount = AnchorCount + 1



					if AnchorCount >= MaxAnchor then



						Prediction = false



						wait(2)



						AnchorCount = 0;



					end



				else



					Prediction = true



					AnchorCount = 0;



				end







				SelectedPart = "HumanoidRootPart"







			end



		else







			--// Anchor Check







			if Plr.Character ~= nil and Plr.Character.HumanoidRootPart.Anchored == true then



				AnchorCount = AnchorCount + 1



				if AnchorCount >= MaxAnchor then



					Prediction = false



					wait(2)



					AnchorCount = 0;



				end



			else



				Prediction = true



				AnchorCount = 0;



			end







			SelectedPart = "HumanoidRootPart"



		end







	else



		SelectedPart = "HumanoidRootPart"



	end



end)







local loaded = true
